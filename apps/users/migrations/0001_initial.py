# Generated by Django 5.0.6 on 2024-05-17 04:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('uuid', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Identificador único')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Nombre de usuario')),
                ('password', models.CharField(max_length=128, verbose_name='Contraseña')),
                ('otp', models.CharField(blank=True, max_length=6, null=True, verbose_name='Código de verificación')),
                ('otp_expires', models.DateTimeField(blank=True, null=True, verbose_name='Expiración del código de verificación')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('is_active', models.BooleanField(default=False, verbose_name='Activo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superusuario')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Último acceso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['date_joined'],
            },
        ),
    ]
